#!/bin/zsh
# -*- mode: zsh -*-

# Aliases

# Common
alias rm='rm -i'
alias cp='cp -i'
alias mv='mv -i'
alias less='less -r'                            # raw control characters
alias whence='type -a'                          # where, of a sort
alias grep='grep --color'                       # show differences in colour
alias egrep='egrep --color=auto'                # pretty grep
alias fgrep='fgrep --color=auto'
alias nmap='nmap -PN'                           # in case host is blocking ping probes.
alias bc='bc -l'# math

# Replace
alias v='nvim'
alias vi='nvim'
alias vim='nvim'
alias cd='z'
alias codei='code-insiders'

alias fzfp='fzf --preview \"bat --number --color always {}\"'
alias cat='bat --paging never --theme DarkNeon --style plain'


# Eza
alias lst='eza --long --all --git --sort modified'
alias ls='eza -F -gh --group-directories-first --git --icons'
alias lh='ls -d .*'
alias lD='ls -D'
alias lc='ls -1'
alias ll='ls -l'
alias la='ll -a'
alias ldot='ls -ld .*'
alias tree='ls -T'

alias copilot='gh copilot'
alias gcs='gh copilot suggest'
alias gce='gh copilot explain'

# Aliases
alias zshconfig="code -n ~/.zshrc"
alias ohmyzsh="code -n ~/.oh-my-zsh"

alias python='python3'

# Command line head / tail shortcuts
alias -g H='| head'
alias -g T='| tail'
alias -g G='| grep'
alias -g L="| less"
alias -g M="| most"
alias -g LL="2>&1 | less"
alias -g CA="2>&1 | cat -A"
alias -g NE="2> /dev/null"
alias -g NUL="> /dev/null 2>&1"
alias -g P="2>&1| pygmentize -l pytb"

alias -g RG="| rg"
alias -g JQF='| jq -R -r ". as \$line | try fromjson catch \$line"'

alias llm_cat_dir="find . -maxdepth 1 -type f | xargs -I {} sh -c 'echo \"\n=== {} ===\n\"; cat {}'"

# ------------------------------------
# Misc :)
# ------------------------------------
alias baty="bat -l yaml"
alias batj="bat -l json"
alias cssh="tmux-cssh"

alias reload="source ~/.zshrc"
alias watch='watch ' # For watch to understand aliases
alias listenPorts="sudo lsof -i -P | grep LISTEN"
alias c="curlie"

alias nbl="nblookup"
alias dognb="dog -n 158.39.128.157 -q"

alias curltime="curl -w \"@$HOME/.curl-format.txt\" -o /dev/null -s "
alias scp='\scp'
alias yqnc="yq eval '... comments=\"\"'"
alias aitop="sudo asitop"

alias vmo="curl wttr.in/mo+i+rana"
alias v2mo="curl v2d.wttr.in/mo+i+rana"
alias lb="sed 's/\\\\n/\\n/g; s/\\\\t/\\t/g'" # Remove linebreaks and tabs from output

# ------------------------------------
# Aliases Brew
# ------------------------------------
alias bubo='brew update && brew outdated'
alias bup='brew upgrade'
alias bubu='bubo && bup'

# ------------------------------------
# Aliases Kubernetes
# ------------------------------------
alias kubectl=kubecolor
alias helmd="helm dashboard"
alias bwe="batwatch --color  --command kubectl get events"
alias bwp="batwatch --color  --command kubectl get pods"
alias bws="batwatch --color  --command kubectl get svc"
alias bwi="batwatch --color  --command kubectl get ing"
alias bwa="batwatch --color --interval=10  --command kubectl get all"
alias k9sh="k9s --headless"

alias kctx="kubectl config get-contexts"
alias kns="kubectl get namespaces"
alias kgn="kubectl get namespaces"
alias k8sdebug="kubectl run -i --tty busyboxdebug --image=harbor.nb.no/auau/tools-jobrunner:debug --rm=true --restart=Never -- sh"
alias k8sdebugmaven="kubectl run -i --tty maven-java-debug --image=harbor.nb.no/staleas/java-maven-bash-debug:1.1.1_amd64 --rm=true --restart=Never -- sh"
alias ktr="kubespy trace deploy"
alias kubefwd-configserver="sudo kubefwd svc -n nbno -f metadata.name=configserver"


# ------------------------------------
# Aliases Git
# ------------------------------------
alias gl='git pull'
alias gcl='git clone --recurse-submodules'
alias gitcl='git clone --recurse-submodules'
alias gits='git status'
alias gita='git add -u'
gitm() { git commit -m "$1" }
alias gitp='git push'
alias gitu='git commit -m "Update $(date +%F-%T)"'
alias gitq='git add -u && git commit -m "Update $(date +%F-%T)" && git push'
#alias gitc='aicommits' # requires aicommits installed (https://github.com/Nutlope/aicommits)


# ------------------------------------
# Aliases Maven
# ------------------------------------
alias mci="mvn clean install"
alias mi="mvn install"
alias mrprep="mvn release:prepare"
alias mrperf="mvn release:perform"
alias mrrb="mvn release:rollback"
alias mdep="mvn dependency:tree"
alias mpom="mvn help:effective-pom"
alias mcisk="mvn -T 6 clean install -Dmaven.test.skip=true"
alias mjr="mvn jetty:run"
alias mcpdb="mvn clean package docker:build"
alias mpurge="mvn dependency:purge-local-repository"
alias mddu="mvn versions:display-dependency-updates"
alias mdt="mvn dependency:tree -Dverbose -Dincludes=commons-collections"
alias mda="mvn dependency:analyze"
alias mlp="mvn help:all-profiles"
alias mwrap="mvn -N io.takari:maven:wrapper"
alias mboot="mvn spring-boot:run"
alias mboot_local="mboot -Dspring.profiles.active=local"
alias mboot_dev="mboot -Dspring.profiles.active=dev"
alias mboot_prod="mboot -Dspring.profiles.active=prod"
alias mvn-clean-recursive="find . -name "pom.xml" -exec mvn clean -f '{}' \;"

# ------------------------------------
# Docker alias and function
# ------------------------------------
alias dl="docker ps -l -q"  # Get latest container ID
alias dps="docker ps"  # Get container process
alias dpa="docker ps -a"  # Get process included stop container
alias di="docker images"  # Get images
alias dip="docker inspect --format '{{ .NetworkSettings.IPAddress }}'"  # Get container IP
alias dkd="docker run -d -P"  # Run deamonized container, e.g., $dkd base /bin/echo hello
alias drmi="docker rmi" # remove image
function dstop() { docker stop $(docker ps -a -q); }  # Stop all containers
function drm() { docker rm $(docker ps -a -q); }  # Remove all containers
function dri_all() { docker rmi -f $(docker images -q); }  # Remove all images
function dbu() { docker build -t=$1 .; }  # Dockerfile build, e.g., $dbu tcnksm/test
function dri_name() { docker rmi $(docker images |grep $1); }


# Proxy test
alias proxyTest='curl -I --proxy http://proxy1.lx.nb.no:3128 -w "Proxy: %{proxy_used}\nRemote IP: %{remote_ip}\nHTTP Code: %{http_code}\n" https://www.vg.no'

